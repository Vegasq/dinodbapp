{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DinoDB Documentation","text":"<p>Welcome to DinoDB, a modern native macOS application for managing AWS DynamoDB tables.</p>"},{"location":"#what-is-dinodb","title":"What is DinoDB?","text":"<p>DinoDB is a powerful, intuitive macOS application that provides a seamless interface for working with AWS DynamoDB. Built with SwiftUI and the AWS SDK for Swift, it offers enterprise-grade security and performance monitoring capabilities.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Multiple AWS Account Management: Securely store and switch between multiple AWS accounts</li> <li>Intuitive Table Operations: Browse, query, and manage DynamoDB data with ease</li> <li>Real-time Monitoring: CloudWatch integration with interactive charts and alerts</li> <li>Modern Native Interface: Built with SwiftUI for a true macOS experience</li> <li>Advanced Security: Keychain integration and secure credential management</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Installation Guide - Get DinoDB up and running</li> <li>Quick Start - Your first steps with DinoDB</li> <li>Account Management - Managing AWS accounts</li> <li>Table Operations - Working with DynamoDB tables</li> </ul>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>\ud83d\udcd6 Browse the User Guide for detailed walkthroughs</li> <li>\ud83d\udd27 Check the Development Guide to contribute</li> <li>\ud83d\udc1b Report issues on GitHub</li> </ul> <p>DinoDB - Modern DynamoDB management for macOS</p>"},{"location":"api/core/","title":"Core Features","text":"<p>Overview of DinoDB's main features and capabilities.</p>"},{"location":"api/core/#account-management","title":"Account Management","text":"<p>DinoDB supports multiple AWS account configurations:</p>"},{"location":"api/core/#aws-credentials-file-integration","title":"AWS Credentials File Integration","text":"<ul> <li>Automatically discovers accounts from <code>~/.aws/credentials</code></li> <li>Read-only access to existing AWS profiles</li> <li>Visual distinction with document icons</li> </ul>"},{"location":"api/core/#secure-account-storage","title":"Secure Account Storage","text":"<ul> <li>Store accounts directly in DinoDB</li> <li>Credentials secured in macOS Keychain</li> <li>Full editing and management capabilities</li> </ul>"},{"location":"api/core/#account-features","title":"Account Features","text":"<ul> <li>Multiple account support</li> <li>Region-specific configurations</li> <li>Tag-based organization</li> <li>Connection status indicators</li> </ul>"},{"location":"api/core/#table-operations","title":"Table Operations","text":""},{"location":"api/core/#data-viewing","title":"Data Viewing","text":"<ul> <li>Table View: Spreadsheet-like interface with sortable columns</li> <li>JSON View: Syntax-highlighted DynamoDB JSON format</li> <li>Pagination: Configurable page sizes (10-250 items)</li> <li>Search &amp; Filter: Find specific tables and data</li> </ul>"},{"location":"api/core/#crud-operations","title":"CRUD Operations","text":"<ul> <li>Create: Add new items with form builder or JSON editor</li> <li>Read: Browse and search table data efficiently</li> <li>Update: Edit items with inline editing or detail views</li> <li>Delete: Remove items with confirmation dialogs</li> </ul>"},{"location":"api/core/#advanced-querying","title":"Advanced Querying","text":"<ul> <li>Query Builder: Visual interface for complex queries</li> <li>Filter Expressions: Attribute-based filtering</li> <li>Index Utilization: Automatic optimization suggestions</li> <li>Export Options: Multiple format support</li> </ul>"},{"location":"api/core/#monitoring-metrics","title":"Monitoring &amp; Metrics","text":""},{"location":"api/core/#cloudwatch-integration","title":"CloudWatch Integration","text":"<ul> <li>Real-time performance metrics from AWS CloudWatch</li> <li>Interactive charts with multiple time ranges</li> <li>Automatic refresh every 60 seconds</li> <li>Historical trend analysis</li> </ul>"},{"location":"api/core/#metric-categories","title":"Metric Categories","text":"<ul> <li>Capacity: Read/write capacity utilization</li> <li>Performance: Latency and throughput metrics</li> <li>Errors: User and system error tracking</li> <li>Storage: Item count and table size metrics</li> </ul>"},{"location":"api/core/#alert-system","title":"Alert System","text":"<ul> <li>Configurable threshold-based alerts</li> <li>Multiple severity levels (Info, Warning, Critical)</li> <li>Native macOS notifications</li> <li>Visual alert indicators in dashboard</li> </ul>"},{"location":"api/core/#user-interface","title":"User Interface","text":""},{"location":"api/core/#modern-design","title":"Modern Design","text":"<ul> <li>Native macOS interface following Human Interface Guidelines</li> <li>Clean, intuitive layout optimized for productivity</li> <li>Responsive design adapting to window sizes</li> <li>Smooth animations and transitions</li> </ul>"},{"location":"api/core/#theme-support","title":"Theme Support","text":"<ul> <li>Light, Dark, and System theme options</li> <li>Live theme switching without restart</li> <li>Consistent styling across all views</li> <li>Accessibility support</li> </ul>"},{"location":"api/core/#navigation","title":"Navigation","text":"<ul> <li>Three-column split view layout</li> <li>Sidebar for accounts and tables</li> <li>Context-sensitive detail views</li> <li>Keyboard shortcut support</li> </ul> <p>This is user-facing documentation focused on features and capabilities</p>"},{"location":"api/managers/","title":"Features Overview","text":"<p>Key features and capabilities available in DinoDB.</p>"},{"location":"api/managers/#account-management-features","title":"Account Management Features","text":""},{"location":"api/managers/#multi-account-support","title":"Multi-Account Support","text":"<ul> <li>Store and manage multiple AWS accounts</li> <li>Switch between accounts seamlessly</li> <li>Visual account status indicators</li> <li>Secure credential storage</li> </ul>"},{"location":"api/managers/#aws-integration","title":"AWS Integration","text":"<ul> <li>Native support for AWS credentials file</li> <li>Automatic profile discovery</li> <li>Region-specific account configurations</li> <li>IAM permission validation</li> </ul>"},{"location":"api/managers/#table-management-features","title":"Table Management Features","text":""},{"location":"api/managers/#table-discovery","title":"Table Discovery","text":"<ul> <li>Automatic table listing from DynamoDB</li> <li>Search and filter capabilities</li> <li>Favorites system for frequently used tables</li> <li>Table metadata display</li> </ul>"},{"location":"api/managers/#data-operations","title":"Data Operations","text":"<ul> <li>Browse table data with pagination</li> <li>Multiple view formats (Table/JSON)</li> <li>Sortable columns and filtering</li> <li>Bulk operations support</li> </ul>"},{"location":"api/managers/#query-features","title":"Query Features","text":""},{"location":"api/managers/#visual-query-builder","title":"Visual Query Builder","text":"<ul> <li>Drag-and-drop query construction</li> <li>Partition and sort key queries</li> <li>Filter expression builder</li> <li>Index selection assistance</li> </ul>"},{"location":"api/managers/#query-optimization","title":"Query Optimization","text":"<ul> <li>Automatic performance suggestions</li> <li>Cost estimation tools</li> <li>Query execution plans</li> <li>Result caching</li> </ul>"},{"location":"api/managers/#monitoring-features","title":"Monitoring Features","text":""},{"location":"api/managers/#real-time-metrics","title":"Real-Time Metrics","text":"<ul> <li>Live CloudWatch data integration</li> <li>Interactive chart visualizations</li> <li>Multiple time range selections</li> <li>Trend analysis indicators</li> </ul>"},{"location":"api/managers/#alert-management","title":"Alert Management","text":"<ul> <li>Configurable metric thresholds</li> <li>Multiple alert severity levels</li> <li>System notification integration</li> <li>Alert history tracking</li> </ul>"},{"location":"api/managers/#user-experience-features","title":"User Experience Features","text":""},{"location":"api/managers/#interface-design","title":"Interface Design","text":"<ul> <li>Native macOS look and feel</li> <li>Responsive layout design</li> <li>Accessibility compliance</li> <li>Dark mode support</li> </ul>"},{"location":"api/managers/#productivity-tools","title":"Productivity Tools","text":"<ul> <li>Keyboard shortcuts</li> <li>Context menus</li> <li>Batch operations</li> <li>Export capabilities</li> </ul> <p>This documentation focuses on user-visible features and capabilities</p>"},{"location":"api/models/","title":"Data Models","text":"<p>Understanding DinoDB's data structures and organization.</p>"},{"location":"api/models/#account-model","title":"Account Model","text":""},{"location":"api/models/#account-properties","title":"Account Properties","text":"<p>Each AWS account in DinoDB contains:</p> <ul> <li>Name: Descriptive account identifier</li> <li>Region: AWS region (e.g., us-east-1, us-west-2)</li> <li>Description: Optional account description</li> <li>Tags: Organizational labels for categorization</li> <li>Created Date: When the account was added to DinoDB</li> </ul>"},{"location":"api/models/#account-types","title":"Account Types","text":"<p>DinoDB supports two types of accounts:</p>"},{"location":"api/models/#stored-accounts","title":"Stored Accounts","text":"<ul> <li>Saved directly in DinoDB</li> <li>Credentials stored securely in macOS Keychain</li> <li>Full editing capabilities</li> <li>Custom metadata support</li> </ul>"},{"location":"api/models/#aws-profile-accounts","title":"AWS Profile Accounts","text":"<ul> <li>Read from <code>~/.aws/credentials</code> file</li> <li>Read-only access</li> <li>Automatically synchronized</li> <li>Marked with document icon</li> </ul>"},{"location":"api/models/#table-information","title":"Table Information","text":""},{"location":"api/models/#table-metadata","title":"Table Metadata","text":"<p>DinoDB displays comprehensive table information:</p> <ul> <li>Table Name: DynamoDB table identifier</li> <li>Item Count: Approximate number of items</li> <li>Table Size: Storage size in bytes</li> <li>Key Schema: Partition and sort key definitions</li> <li>Provisioned Throughput: Read/write capacity settings</li> <li>Global Secondary Indexes: Additional query patterns</li> <li>Local Secondary Indexes: Alternative sort key options</li> </ul>"},{"location":"api/models/#table-status","title":"Table Status","text":"<ul> <li>Active: Table is available for operations</li> <li>Creating: Table is being created</li> <li>Updating: Table modification in progress</li> <li>Deleting: Table deletion in progress</li> </ul>"},{"location":"api/models/#item-structure","title":"Item Structure","text":""},{"location":"api/models/#dynamodb-item-format","title":"DynamoDB Item Format","text":"<p>Items in DynamoDB use a specific attribute-value format:</p> <pre><code>{\n  \"id\": {\"S\": \"user123\"},\n  \"name\": {\"S\": \"John Doe\"},\n  \"age\": {\"N\": \"30\"},\n  \"active\": {\"BOOL\": true},\n  \"tags\": {\"SS\": [\"premium\", \"verified\"]}\n}\n</code></pre>"},{"location":"api/models/#attribute-types","title":"Attribute Types","text":"<p>DinoDB supports all DynamoDB attribute types:</p> <ul> <li>S: String</li> <li>N: Number</li> <li>B: Binary</li> <li>SS: String Set</li> <li>NS: Number Set</li> <li>BS: Binary Set</li> <li>M: Map (nested object)</li> <li>L: List (array)</li> <li>NULL: Null value</li> <li>BOOL: Boolean</li> </ul>"},{"location":"api/models/#query-parameters","title":"Query Parameters","text":""},{"location":"api/models/#query-configuration","title":"Query Configuration","text":"<p>When building queries, you can specify:</p> <ul> <li>Partition Key: Required equality condition</li> <li>Sort Key: Optional range or equality condition</li> <li>Filter Expression: Additional item filtering</li> <li>Projection Expression: Specific attributes to return</li> <li>Index Name: Global or Local Secondary Index</li> <li>Limit: Maximum items to return</li> <li>Scan Forward: Sort order for results</li> </ul>"},{"location":"api/models/#pagination","title":"Pagination","text":"<p>DinoDB handles large result sets through:</p> <ul> <li>Page Size: Configurable items per page</li> <li>Last Evaluated Key: Continuation token</li> <li>Total Count: Estimated total items</li> <li>Page Navigation: Forward/backward controls</li> </ul> <p>This documentation describes the data structures users work with in DinoDB</p>"},{"location":"development/architecture/","title":"Architecture","text":"<p>Deep dive into DinoDB's technical architecture and design patterns.</p>"},{"location":"development/architecture/#overview","title":"Overview","text":"<p>DinoDB follows modern Swift and SwiftUI architectural patterns, emphasizing: - MVVM Architecture: Clear separation of concerns - Reactive Programming: SwiftUI's declarative approach - Dependency Injection: Testable and maintainable code - Async/Await: Modern Swift concurrency</p>"},{"location":"development/architecture/#core-architecture","title":"Core Architecture","text":""},{"location":"development/architecture/#mvvm-pattern","title":"MVVM Pattern","text":"<pre><code>Views (SwiftUI) \u2194 ViewModels (ObservableObject) \u2194 Models (SwiftData)\n                              \u2193\n                          Managers (Business Logic)\n                              \u2193\n                          AWS SDK (External Services)\n</code></pre>"},{"location":"development/architecture/#key-components","title":"Key Components","text":""},{"location":"development/architecture/#views-layer","title":"Views Layer","text":"<ul> <li>SwiftUI Views: Declarative UI components</li> <li>Navigation: Split view and sheet-based navigation</li> <li>State Management: @State, @StateObject, @ObservedObject</li> <li>User Interactions: Gesture handling and form validation</li> </ul>"},{"location":"development/architecture/#viewmodels-layer","title":"ViewModels Layer","text":"<ul> <li>ObservableObject Classes: Reactive state management</li> <li>Published Properties: Automatic UI updates</li> <li>Business Logic: Orchestration of manager operations</li> <li>Error Handling: User-friendly error presentation</li> </ul>"},{"location":"development/architecture/#models-layer","title":"Models Layer","text":"<ul> <li>SwiftData Models: Core data persistence</li> <li>Value Types: Immutable data structures</li> <li>Protocols: Interface definitions</li> <li>Extensions: Shared functionality</li> </ul>"},{"location":"development/architecture/#managers-layer","title":"Managers Layer","text":"<ul> <li>Service Classes: External API integration</li> <li>Singleton Pattern: Shared state management</li> <li>Async Operations: Network and I/O operations</li> <li>Caching: Performance optimization</li> </ul>"},{"location":"development/architecture/#core-technologies","title":"Core Technologies","text":""},{"location":"development/architecture/#swiftui-framework","title":"SwiftUI Framework","text":"<ul> <li>Declarative Syntax: UI as a function of state</li> <li>Native Performance: Optimized for macOS</li> <li>Accessibility: Built-in accessibility support</li> <li>Animation System: Smooth state transitions</li> </ul>"},{"location":"development/architecture/#swiftdata-integration","title":"SwiftData Integration","text":"<ul> <li>Model Persistence: Account and settings storage</li> <li>Query Interface: Type-safe data queries</li> <li>Relationship Management: Connected data models</li> <li>Migration Support: Schema evolution</li> </ul>"},{"location":"development/architecture/#aws-sdk-for-swift","title":"AWS SDK for Swift","text":"<ul> <li>DynamoDB Client: Table and item operations</li> <li>CloudWatch Client: Metrics and monitoring</li> <li>Credential Management: Secure authentication</li> <li>Error Handling: Comprehensive error types</li> </ul>"},{"location":"development/architecture/#state-management","title":"State Management","text":""},{"location":"development/architecture/#application-state","title":"Application State","text":"<ul> <li>Global State: TableSelectionManager singleton</li> <li>Local State: View-specific @State properties</li> <li>Shared State: @StateObject for cross-view data</li> <li>Persistence: UserDefaults and SwiftData</li> </ul>"},{"location":"development/architecture/#data-flow","title":"Data Flow","text":"<pre><code>User Action \u2192 View \u2192 ViewModel \u2192 Manager \u2192 AWS API\n                \u2193\n           State Update \u2192 UI Refresh\n</code></pre>"},{"location":"development/architecture/#reactive-updates","title":"Reactive Updates","text":"<ul> <li>Published Properties: Automatic UI updates</li> <li>Combine Integration: Reactive data streams</li> <li>Observer Pattern: Decoupled component communication</li> <li>Debouncing: Performance optimization for rapid updates</li> </ul>"},{"location":"development/architecture/#security-architecture","title":"Security Architecture","text":""},{"location":"development/architecture/#credential-management","title":"Credential Management","text":"<ul> <li>Keychain Integration: Secure storage of AWS credentials</li> <li>Read-only AWS Profiles: Safe access to credentials file</li> <li>No Plaintext Storage: All sensitive data encrypted</li> <li>App Sandboxing: macOS security boundaries</li> </ul>"},{"location":"development/architecture/#data-protection","title":"Data Protection","text":"<ul> <li>In-Memory Processing: Minimal data persistence</li> <li>Secure Deletion: Proper cleanup of sensitive data</li> <li>Access Control: User-controlled data access</li> <li>Audit Logging: Security event tracking</li> </ul>"},{"location":"development/architecture/#performance-architecture","title":"Performance Architecture","text":""},{"location":"development/architecture/#async-operations","title":"Async Operations","text":"<ul> <li>Swift Concurrency: Modern async/await patterns</li> <li>Task Management: Proper task lifecycle</li> <li>Cancellation Support: Responsive user interactions</li> <li>Error Propagation: Structured error handling</li> </ul>"},{"location":"development/architecture/#memory-management","title":"Memory Management","text":"<ul> <li>ARC Optimization: Automatic reference counting</li> <li>Weak References: Avoiding retain cycles</li> <li>Lazy Loading: On-demand resource allocation</li> <li>Cache Management: Intelligent data caching</li> </ul>"},{"location":"development/architecture/#network-optimization","title":"Network Optimization","text":"<ul> <li>Connection Pooling: Efficient AWS API usage</li> <li>Request Batching: Reduced API calls</li> <li>Retry Logic: Resilient network operations</li> <li>Timeout Handling: Responsive user experience</li> </ul>"},{"location":"development/architecture/#monitoring-architecture","title":"Monitoring Architecture","text":""},{"location":"development/architecture/#debug-logging-system","title":"Debug Logging System","text":"<ul> <li>Structured Logging: Categorized log entries</li> <li>Performance Tracking: Operation timing</li> <li>User Action Logging: Interaction tracking</li> <li>Error Correlation: Comprehensive error context</li> </ul>"},{"location":"development/architecture/#metrics-integration","title":"Metrics Integration","text":"<ul> <li>CloudWatch API: Real-time metrics collection</li> <li>Chart Rendering: Native SwiftUI Charts</li> <li>Data Transformation: Metric processing</li> <li>Alert Processing: Threshold-based notifications</li> </ul>"},{"location":"development/architecture/#testing-architecture","title":"Testing Architecture","text":""},{"location":"development/architecture/#unit-testing","title":"Unit Testing","text":"<ul> <li>Swift Testing Framework: Modern test structure</li> <li>Mock Objects: Isolated component testing</li> <li>Async Testing: Concurrent operation validation</li> <li>Code Coverage: Comprehensive test metrics</li> </ul>"},{"location":"development/architecture/#integration-testing","title":"Integration Testing","text":"<ul> <li>AWS Service Mocking: Controlled testing environment</li> <li>End-to-End Flows: Complete user scenarios</li> <li>Performance Testing: Load and stress testing</li> <li>Security Testing: Vulnerability assessment</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"development/build-guide/","title":"Build Guide","text":"<p>Complete guide to building DinoDB from source.</p>"},{"location":"development/build-guide/#prerequisites","title":"Prerequisites","text":""},{"location":"development/build-guide/#development-environment","title":"Development Environment","text":"<ul> <li>Xcode: 15.0 or later</li> <li>macOS: 14.0 (Sonoma) or later for development</li> <li>Swift: 5.9 or later</li> <li>Git: For source control</li> </ul>"},{"location":"development/build-guide/#required-sdks","title":"Required SDKs","text":"<ul> <li>AWS SDK for Swift v1.0+</li> <li>SwiftUI and SwiftData frameworks</li> <li>CloudWatch SDK components</li> </ul>"},{"location":"development/build-guide/#quick-start","title":"Quick Start","text":""},{"location":"development/build-guide/#clone-repository","title":"Clone Repository","text":"<pre><code>git clone https://github.com/vegasq/dinodbapp.git\ncd dinodbapp\n</code></pre>"},{"location":"development/build-guide/#standard-build","title":"Standard Build","text":"<pre><code>xcodebuild -project DinoDB.xcodeproj -scheme DinoDB -configuration Debug build\n</code></pre>"},{"location":"development/build-guide/#clean-build","title":"Clean Build","text":"<pre><code>xcodebuild -project DinoDB.xcodeproj -scheme DinoDB clean build\n</code></pre>"},{"location":"development/build-guide/#build-configurations","title":"Build Configurations","text":""},{"location":"development/build-guide/#debug-configuration","title":"Debug Configuration","text":"<ul> <li>Full debugging symbols</li> <li>Debug logging enabled</li> <li>Development provisioning</li> <li>Faster compilation</li> </ul>"},{"location":"development/build-guide/#release-configuration","title":"Release Configuration","text":"<ul> <li>Optimized performance</li> <li>Reduced binary size</li> <li>Distribution provisioning</li> <li>Production-ready build</li> </ul>"},{"location":"development/build-guide/#project-structure","title":"Project Structure","text":""},{"location":"development/build-guide/#core-directories","title":"Core Directories","text":"<pre><code>DinoDB/\n\u251c\u2500\u2500 Models/           # SwiftData models\n\u251c\u2500\u2500 Views/           # SwiftUI views\n\u251c\u2500\u2500 Managers/        # Business logic\n\u251c\u2500\u2500 Documentation/   # Technical docs\n\u2514\u2500\u2500 Tests/          # Unit and UI tests\n</code></pre>"},{"location":"development/build-guide/#key-files","title":"Key Files","text":"<ul> <li><code>DinoDBApp.swift</code>: Application entry point</li> <li><code>ContentView.swift</code>: Main navigation interface</li> <li><code>DynamoDBManager.swift</code>: AWS integration</li> <li><code>Account.swift</code>: Core data model</li> </ul>"},{"location":"development/build-guide/#dependencies","title":"Dependencies","text":""},{"location":"development/build-guide/#aws-sdk-for-swift","title":"AWS SDK for Swift","text":"<ul> <li>DynamoDB client integration</li> <li>CloudWatch metrics support</li> <li>Automatic dependency resolution</li> <li>Version compatibility matrix</li> </ul>"},{"location":"development/build-guide/#swiftui-frameworks","title":"SwiftUI Frameworks","text":"<ul> <li>Native macOS interface components</li> <li>Charts framework for metrics</li> <li>UserNotifications for alerts</li> <li>Keychain Services for security</li> </ul>"},{"location":"development/build-guide/#build-scripts","title":"Build Scripts","text":""},{"location":"development/build-guide/#automated-building","title":"Automated Building","text":"<p>The project includes build automation scripts for common scenarios:</p> <pre><code># Full build with tests\n./scripts/build-full.sh\n\n# Quick development build\n./scripts/build-dev.sh\n\n# Release build with signing\n./scripts/build-release.sh\n</code></pre>"},{"location":"development/build-guide/#testing","title":"Testing","text":""},{"location":"development/build-guide/#unit-tests","title":"Unit Tests","text":"<pre><code>xcodebuild test -project DinoDB.xcodeproj -scheme DinoDB -only-testing:DinoDBTests\n</code></pre>"},{"location":"development/build-guide/#ui-tests","title":"UI Tests","text":"<pre><code>xcodebuild test -project DinoDB.xcodeproj -scheme DinoDB -only-testing:DinoDBUITests\n</code></pre>"},{"location":"development/build-guide/#code-coverage","title":"Code Coverage","text":"<pre><code>xcodebuild test -project DinoDB.xcodeproj -scheme DinoDB -enableCodeCoverage YES\n</code></pre>"},{"location":"development/build-guide/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/build-guide/#common-build-issues","title":"Common Build Issues","text":"<ul> <li>SDK Version Mismatch: Update Xcode and Swift</li> <li>Dependency Conflicts: Clean derived data</li> <li>Signing Issues: Check provisioning profiles</li> <li>Architecture Errors: Verify target settings</li> </ul>"},{"location":"development/build-guide/#debug-tools","title":"Debug Tools","text":"<ul> <li>Xcode debugger integration</li> <li>Performance profiling tools</li> <li>Memory leak detection</li> <li>Network request monitoring</li> </ul>"},{"location":"development/build-guide/#build-optimization","title":"Build Optimization","text":"<ul> <li>Parallel build settings</li> <li>Compiler optimization flags</li> <li>Link-time optimization</li> <li>Dead code elimination</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"development/contributing/","title":"Contributing","text":"<p>Guidelines for contributing to DinoDB development.</p>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":""},{"location":"development/contributing/#development-setup","title":"Development Setup","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally</li> <li>Install Xcode 15.0 or later</li> <li>Open <code>DinoDB.xcodeproj</code></li> <li>Build and run the project</li> </ol>"},{"location":"development/contributing/#prerequisites","title":"Prerequisites","text":"<ul> <li>macOS 14.0+ for development</li> <li>Understanding of SwiftUI and SwiftData</li> <li>Familiarity with AWS DynamoDB</li> <li>Git workflow knowledge</li> </ul>"},{"location":"development/contributing/#development-guidelines","title":"Development Guidelines","text":""},{"location":"development/contributing/#code-style","title":"Code Style","text":"<ul> <li>Follow Swift API Design Guidelines</li> <li>Use SwiftLint for consistent formatting</li> <li>Maintain existing architectural patterns</li> <li>Write self-documenting code</li> </ul>"},{"location":"development/contributing/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Classes: PascalCase (e.g., <code>DynamoDBManager</code>)</li> <li>Properties: camelCase (e.g., <code>tableName</code>)</li> <li>Constants: camelCase (e.g., <code>defaultPageSize</code>)</li> <li>Enums: PascalCase cases (e.g., <code>.loading</code>, <code>.loaded</code>)</li> </ul>"},{"location":"development/contributing/#file-organization","title":"File Organization","text":"<ul> <li>Group related functionality in folders</li> <li>Separate views, models, and managers</li> <li>Keep files under 500 lines when possible</li> <li>Use extensions for protocol conformance</li> </ul>"},{"location":"development/contributing/#mandatory-requirements","title":"Mandatory Requirements","text":""},{"location":"development/contributing/#debug-logging","title":"Debug Logging","text":"<p>ALL code changes MUST include comprehensive debug logging:</p> <pre><code>// Log user actions\nDebugLogger.shared.log(\"User clicked refresh button\", category: \"UserAction\")\n\n// Time AWS operations\nlet timer = DebugLogger.shared.startTimer()\n// ... AWS operation\nDebugLogger.shared.endTimer(timer, operation: \"ListTables\", category: \"AWS\")\n\n// Log errors with context\nDebugLogger.shared.log(\"Failed to connect: \\(error)\", category: \"Error\")\n</code></pre>"},{"location":"development/contributing/#required-categories","title":"Required Categories","text":"<ul> <li>UserAction: All direct user interactions</li> <li>AWS: DynamoDB and CloudWatch API calls</li> <li>DataOp: CRUD operations</li> <li>Auth: Authentication events</li> <li>Performance: Operations &gt;100ms</li> <li>Error: All error conditions</li> </ul>"},{"location":"development/contributing/#security-requirements","title":"Security Requirements","text":"<ul> <li>\u274c NEVER log: AWS credentials, PII, sensitive data</li> <li>\u2705 Safe to log: Account names, table names, counts, errors</li> <li>Always use appropriate log categories</li> <li>Include context but protect privacy</li> </ul>"},{"location":"development/contributing/#pull-request-process","title":"Pull Request Process","text":""},{"location":"development/contributing/#before-submitting","title":"Before Submitting","text":"<ol> <li>Add comprehensive logging to all new code</li> <li>Write or update unit tests</li> <li>Run full test suite</li> <li>Update documentation if needed</li> <li>Test debug panel functionality</li> </ol>"},{"location":"development/contributing/#pr-checklist","title":"PR Checklist","text":"<ul> <li>[ ] Debug logging added with appropriate categories</li> <li>[ ] No sensitive data in logs</li> <li>[ ] Tests pass with &gt;90% coverage</li> <li>[ ] No SwiftLint warnings</li> <li>[ ] Documentation updated</li> <li>[ ] Debug panel tested</li> </ul>"},{"location":"development/contributing/#pr-description-template","title":"PR Description Template","text":"<pre><code>## Summary\nBrief description of changes\n\n## Changes Made\n- Detailed list of modifications\n- New features or bug fixes\n- Performance improvements\n\n## Testing\n- Unit tests added/updated\n- Manual testing performed\n- Debug logging verified\n\n## Debug Logging\n- Categories used: UserAction, AWS, DataOp, etc.\n- No sensitive data logged\n- Debug panel functionality tested\n</code></pre>"},{"location":"development/contributing/#testing-requirements","title":"Testing Requirements","text":""},{"location":"development/contributing/#unit-tests","title":"Unit Tests","text":"<ul> <li>Swift Testing Framework: Use modern testing patterns</li> <li>90% Coverage: Target for all new code</li> <li>Mock AWS Services: Isolated testing</li> <li>Async Testing: Proper concurrent testing</li> </ul>"},{"location":"development/contributing/#integration-tests","title":"Integration Tests","text":"<ul> <li>End-to-end user workflows</li> <li>AWS service integration</li> <li>Error handling scenarios</li> <li>Performance benchmarks</li> </ul>"},{"location":"development/contributing/#manual-testing","title":"Manual Testing","text":"<ul> <li>Test in both light and dark themes</li> <li>Verify keyboard shortcuts work</li> <li>Check accessibility features</li> <li>Validate debug panel output</li> </ul>"},{"location":"development/contributing/#code-review-process","title":"Code Review Process","text":""},{"location":"development/contributing/#review-criteria","title":"Review Criteria","text":"<ol> <li>Logging Compliance: Comprehensive debug logging</li> <li>Security: No credential exposure in logs</li> <li>Architecture: Follows MVVM patterns</li> <li>Performance: Efficient async operations</li> <li>Testing: Adequate test coverage</li> <li>Documentation: Clear and accurate</li> </ol>"},{"location":"development/contributing/#reviewer-responsibilities","title":"Reviewer Responsibilities","text":"<ul> <li>Verify debug logging requirements</li> <li>Check for security vulnerabilities</li> <li>Validate architectural consistency</li> <li>Ensure test coverage</li> <li>Review documentation updates</li> </ul>"},{"location":"development/contributing/#release-process","title":"Release Process","text":""},{"location":"development/contributing/#version-management","title":"Version Management","text":"<ul> <li>Follow semantic versioning (MAJOR.MINOR.PATCH)</li> <li>Tag releases in Git</li> <li>Update changelog</li> <li>Build release notes</li> </ul>"},{"location":"development/contributing/#quality-gates","title":"Quality Gates","text":"<ul> <li>All tests must pass</li> <li>Code coverage &gt;90%</li> <li>No critical security issues</li> <li>Performance benchmarks met</li> <li>Debug logging verified</li> </ul>"},{"location":"development/contributing/#documentation","title":"Documentation","text":""},{"location":"development/contributing/#required-updates","title":"Required Updates","text":"<ul> <li>Update CLAUDE.md for architectural changes</li> <li>Add inline code documentation</li> <li>Update user-facing documentation</li> <li>Include examples and usage patterns</li> </ul>"},{"location":"development/contributing/#documentation-standards","title":"Documentation Standards","text":"<ul> <li>Clear, concise language</li> <li>Code examples with proper syntax highlighting</li> <li>Screenshots for UI changes</li> <li>Architecture diagrams for complex features</li> </ul>"},{"location":"development/contributing/#community-guidelines","title":"Community Guidelines","text":""},{"location":"development/contributing/#communication","title":"Communication","text":"<ul> <li>Be respectful and inclusive</li> <li>Provide constructive feedback</li> <li>Ask questions when unclear</li> <li>Share knowledge openly</li> </ul>"},{"location":"development/contributing/#issue-reporting","title":"Issue Reporting","text":"<ul> <li>Use provided issue templates</li> <li>Include reproduction steps</li> <li>Provide system information</li> <li>Include debug logs (without sensitive data)</li> </ul>"},{"location":"development/contributing/#feature-requests","title":"Feature Requests","text":"<ul> <li>Explain the use case clearly</li> <li>Consider existing patterns</li> <li>Discuss implementation approaches</li> <li>Consider maintenance burden</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"development/testing/","title":"Testing Guide","text":"<p>Comprehensive testing strategy and guidelines for DinoDB.</p>"},{"location":"development/testing/#testing-framework","title":"Testing Framework","text":""},{"location":"development/testing/#swift-testing-framework","title":"Swift Testing Framework","text":"<p>DinoDB uses the modern Swift Testing framework (Swift 6 compatible): - Structured Testing: Clear test organization - Async Support: Built-in async/await testing - Parameterized Tests: Data-driven testing - Custom Expectations: Tailored assertions</p>"},{"location":"development/testing/#testing-philosophy","title":"Testing Philosophy","text":"<ul> <li>Test-Driven Development: Write tests before implementation</li> <li>90% Coverage Target: Comprehensive test coverage</li> <li>Fast Feedback: Quick test execution</li> <li>Reliable Tests: Deterministic and stable</li> </ul>"},{"location":"development/testing/#test-structure","title":"Test Structure","text":""},{"location":"development/testing/#directory-organization","title":"Directory Organization","text":"<pre><code>DinoDBTests/\n\u251c\u2500\u2500 Unit/\n\u2502   \u251c\u2500\u2500 Models/\n\u2502   \u251c\u2500\u2500 Managers/\n\u2502   \u2514\u2500\u2500 Utilities/\n\u251c\u2500\u2500 Integration/\n\u2502   \u251c\u2500\u2500 AWS/\n\u2502   \u2514\u2500\u2500 DataFlow/\n\u2514\u2500\u2500 UI/\n    \u251c\u2500\u2500 Views/\n    \u2514\u2500\u2500 Workflows/\n</code></pre>"},{"location":"development/testing/#test-categories","title":"Test Categories","text":""},{"location":"development/testing/#unit-tests","title":"Unit Tests","text":"<ul> <li>Models: SwiftData model validation</li> <li>Managers: Business logic testing</li> <li>Utilities: Helper function testing</li> <li>ViewModels: State management testing</li> </ul>"},{"location":"development/testing/#integration-tests","title":"Integration Tests","text":"<ul> <li>AWS Integration: DynamoDB operations</li> <li>Data Flow: End-to-end scenarios</li> <li>Authentication: Credential management</li> <li>Performance: Load and timing tests</li> </ul>"},{"location":"development/testing/#ui-tests","title":"UI Tests","text":"<ul> <li>User Workflows: Complete user scenarios</li> <li>Navigation: View transitions</li> <li>Forms: Input validation</li> <li>Accessibility: Screen reader support</li> </ul>"},{"location":"development/testing/#running-tests","title":"Running Tests","text":""},{"location":"development/testing/#command-line","title":"Command Line","text":"<pre><code># Run all tests\nxcodebuild test -project DinoDB.xcodeproj -scheme DinoDB\n\n# Run only unit tests\nxcodebuild test -project DinoDB.xcodeproj -scheme DinoDB -only-testing:DinoDBTests\n\n# Run with code coverage\nxcodebuild test -project DinoDB.xcodeproj -scheme DinoDB -enableCodeCoverage YES\n\n# Run specific test class\nxcodebuild test -project DinoDB.xcodeproj -scheme DinoDB -only-testing:DinoDBTests/AccountModelTests\n</code></pre>"},{"location":"development/testing/#xcode-integration","title":"Xcode Integration","text":"<ul> <li>Test Navigator: Visual test management</li> <li>Test Reports: Detailed results and coverage</li> <li>Debugging: Breakpoints in tests</li> <li>Performance Testing: XCTMetric integration</li> </ul>"},{"location":"development/testing/#test-coverage","title":"Test Coverage","text":""},{"location":"development/testing/#current-coverage","title":"Current Coverage","text":"<ul> <li>\u2705 KeychainHelper: 95% coverage</li> <li>\u2705 Account Model: 90% coverage  </li> <li>\u2705 DynamoDBManager: 85% coverage</li> <li>\ud83d\udd04 CloudWatchManager: 70% coverage (in progress)</li> <li>\u23f3 UI Components: 60% coverage (planned)</li> </ul>"},{"location":"development/testing/#coverage-requirements","title":"Coverage Requirements","text":"<ul> <li>New Code: 90% minimum coverage</li> <li>Critical Paths: 100% coverage</li> <li>Security Code: 100% coverage</li> <li>Error Handling: 95% coverage</li> </ul>"},{"location":"development/testing/#coverage-tools","title":"Coverage Tools","text":"<pre><code># Generate coverage report\nxcodebuild test -project DinoDB.xcodeproj -scheme DinoDB \\\n  -enableCodeCoverage YES \\\n  -resultBundlePath TestResults.xcresult\n\n# View coverage in Xcode\nopen TestResults.xcresult\n</code></pre>"},{"location":"development/testing/#testing-patterns","title":"Testing Patterns","text":""},{"location":"development/testing/#unit-test-example","title":"Unit Test Example","text":"<pre><code>import Testing\n@testable import DinoDB\n\nstruct AccountModelTests {\n    @Test func testAccountCreation() async throws {\n        // Given\n        let account = Account(\n            name: \"Test Account\",\n            accessKeyId: \"AKIATEST\",\n            region: \"us-east-1\"\n        )\n\n        // When\n        let isValid = account.isValid\n\n        // Then\n        #expect(isValid == true)\n        #expect(account.name == \"Test Account\")\n    }\n\n    @Test func testAccountValidation() async throws {\n        // Given\n        let invalidAccount = Account(name: \"\", accessKeyId: \"\", region: \"\")\n\n        // When/Then\n        #expect(invalidAccount.isValid == false)\n    }\n}\n</code></pre>"},{"location":"development/testing/#integration-test-example","title":"Integration Test Example","text":"<pre><code>struct DynamoDBManagerTests {\n    @Test func testListTables() async throws {\n        // Given\n        let mockCredentials = AWSCredentials(accessKey: \"test\", secretKey: \"test\")\n        let manager = DynamoDBManager()\n\n        // When\n        let tables = try await manager.listTables(credentials: mockCredentials)\n\n        // Then\n        #expect(tables.count &gt;= 0)\n    }\n}\n</code></pre>"},{"location":"development/testing/#ui-test-example","title":"UI Test Example","text":"<pre><code>import XCTest\n\nfinal class DinoDBUITests: XCTestCase {\n    func testAccountListNavigation() throws {\n        let app = XCUIApplication()\n        app.launch()\n\n        // Test account list appears\n        XCTAssertTrue(app.staticTexts[\"Accounts\"].exists)\n\n        // Test add account button\n        app.buttons[\"Add Account\"].tap()\n        XCTAssertTrue(app.navigationBars[\"Add Account\"].exists)\n    }\n}\n</code></pre>"},{"location":"development/testing/#mocking-and-test-doubles","title":"Mocking and Test Doubles","text":""},{"location":"development/testing/#aws-service-mocking","title":"AWS Service Mocking","text":"<pre><code>protocol DynamoDBClientProtocol {\n    func listTables() async throws -&gt; [String]\n}\n\nclass MockDynamoDBClient: DynamoDBClientProtocol {\n    var mockTables: [String] = []\n    var shouldThrowError = false\n\n    func listTables() async throws -&gt; [String] {\n        if shouldThrowError {\n            throw AWSError.unauthorized\n        }\n        return mockTables\n    }\n}\n</code></pre>"},{"location":"development/testing/#swiftdata-mocking","title":"SwiftData Mocking","text":"<pre><code>@MainActor\nclass TestModelContainer {\n    static let shared: ModelContainer = {\n        let schema = Schema([Account.self])\n        let config = ModelConfiguration(isStoredInMemoryOnly: true)\n        return try! ModelContainer(for: schema, configurations: [config])\n    }()\n}\n</code></pre>"},{"location":"development/testing/#performance-testing","title":"Performance Testing","text":""},{"location":"development/testing/#metrics-collection","title":"Metrics Collection","text":"<pre><code>@Test func testTableLoadPerformance() async throws {\n    let startTime = CFAbsoluteTimeGetCurrent()\n\n    // Perform operation\n    let tables = try await dynamoDBManager.listTables()\n\n    let timeElapsed = CFAbsoluteTimeGetCurrent() - startTime\n    #expect(timeElapsed &lt; 2.0) // Should complete within 2 seconds\n}\n</code></pre>"},{"location":"development/testing/#memory-testing","title":"Memory Testing","text":"<pre><code>@Test func testMemoryUsage() async throws {\n    let initialMemory = getMemoryUsage()\n\n    // Perform memory-intensive operation\n    try await loadLargeDataset()\n\n    // Force garbage collection\n    autoreleasepool {}\n\n    let finalMemory = getMemoryUsage()\n    #expect(finalMemory - initialMemory &lt; 50_000_000) // 50MB limit\n}\n</code></pre>"},{"location":"development/testing/#test-data-management","title":"Test Data Management","text":""},{"location":"development/testing/#test-fixtures","title":"Test Fixtures","text":"<pre><code>struct TestData {\n    static let sampleAccount = Account(\n        name: \"Test Account\",\n        accessKeyId: \"AKIATEST123\",\n        region: \"us-east-1\"\n    )\n\n    static let sampleTables = [\"Users\", \"Products\", \"Orders\"]\n\n    static let sampleItem: [String: Any] = [\n        \"id\": \"123\",\n        \"name\": \"Test Item\",\n        \"created\": Date()\n    ]\n}\n</code></pre>"},{"location":"development/testing/#database-seeding","title":"Database Seeding","text":"<pre><code>@MainActor\nclass DatabaseSeeder {\n    static func seedTestData(context: ModelContext) {\n        let accounts = [\n            TestData.sampleAccount,\n            Account(name: \"Prod Account\", accessKeyId: \"AKIAPROD\", region: \"us-west-2\")\n        ]\n\n        accounts.forEach { context.insert($0) }\n        try! context.save()\n    }\n}\n</code></pre>"},{"location":"development/testing/#continuous-integration","title":"Continuous Integration","text":""},{"location":"development/testing/#github-actions","title":"GitHub Actions","text":"<pre><code>name: Tests\non: [push, pull_request]\njobs:\n  test:\n    runs-on: macos-latest\n    steps:\n      - uses: actions/checkout@v3\n      - name: Run tests\n        run: |\n          xcodebuild test \\\n            -project DinoDB.xcodeproj \\\n            -scheme DinoDB \\\n            -enableCodeCoverage YES\n</code></pre>"},{"location":"development/testing/#quality-gates","title":"Quality Gates","text":"<ul> <li>All tests must pass</li> <li>Code coverage &gt;90% for new code</li> <li>Performance benchmarks met</li> <li>No memory leaks detected</li> <li>Security tests pass</li> </ul>"},{"location":"development/testing/#debugging-tests","title":"Debugging Tests","text":""},{"location":"development/testing/#common-issues","title":"Common Issues","text":"<ul> <li>Async Test Failures: Use proper async/await patterns</li> <li>UI Test Flakiness: Add explicit waits</li> <li>Memory Leaks: Check retain cycles</li> <li>Mock Setup: Verify mock configurations</li> </ul>"},{"location":"development/testing/#debug-tools","title":"Debug Tools","text":"<ul> <li>Test Logs: Detailed test execution logs</li> <li>Memory Graph: Visual memory analysis</li> <li>Time Profiler: Performance bottleneck identification</li> <li>Network Profiler: API call analysis</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<ul> <li>macOS: 14.0 (Sonoma) or later</li> <li>Architecture: Intel or Apple Silicon (M1/M2/M3)</li> <li>RAM: 4GB minimum, 8GB recommended</li> <li>Storage: 100MB free space</li> </ul>"},{"location":"getting-started/installation/#download-options","title":"Download Options","text":""},{"location":"getting-started/installation/#option-1-direct-download-recommended","title":"Option 1: Direct Download (Recommended)","text":"<ol> <li>Visit dinodb.app</li> <li>Click \"Download for macOS\"</li> <li>Open the downloaded DMG file</li> <li>Drag DinoDB to your Applications folder</li> </ol>"},{"location":"getting-started/installation/#option-2-github-releases","title":"Option 2: GitHub Releases","text":"<ol> <li>Go to GitHub Releases</li> <li>Download the latest <code>DinoDB.dmg</code> file</li> <li>Follow the same installation steps as above</li> </ol>"},{"location":"getting-started/installation/#first-launch","title":"First Launch","text":"<ol> <li>Open DinoDB from Applications folder</li> <li>If you see a security warning:</li> <li>Go to System Settings &gt; Privacy &amp; Security</li> <li>Click \"Open Anyway\" next to the DinoDB warning</li> <li>Confirm by clicking \"Open\" in the dialog</li> </ol>"},{"location":"getting-started/installation/#aws-prerequisites","title":"AWS Prerequisites","text":"<p>Before using DinoDB, ensure you have:</p>"},{"location":"getting-started/installation/#aws-account","title":"AWS Account","text":"<ul> <li>Active AWS account with DynamoDB access</li> <li>IAM user or role with appropriate permissions</li> </ul>"},{"location":"getting-started/installation/#required-aws-permissions","title":"Required AWS Permissions","text":"<pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:ListTables\",\n                \"dynamodb:DescribeTable\",\n                \"dynamodb:Scan\",\n                \"dynamodb:Query\",\n                \"dynamodb:GetItem\",\n                \"dynamodb:PutItem\",\n                \"dynamodb:UpdateItem\",\n                \"dynamodb:DeleteItem\",\n                \"dynamodb:CreateTable\",\n                \"dynamodb:DeleteTable\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:ListMetrics\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre>"},{"location":"getting-started/installation/#aws-credentials-setup","title":"AWS Credentials Setup","text":"<p>Choose one of these methods:</p>"},{"location":"getting-started/installation/#method-1-aws-credentials-file","title":"Method 1: AWS Credentials File","text":"<p>Create <code>~/.aws/credentials</code> with: <pre><code>[default]\naws_access_key_id = YOUR_ACCESS_KEY\naws_secret_access_key = YOUR_SECRET_KEY\nregion = us-east-1\n\n[production]\naws_access_key_id = PROD_ACCESS_KEY\naws_secret_access_key = PROD_SECRET_KEY\nregion = us-west-2\n</code></pre></p>"},{"location":"getting-started/installation/#method-2-dinodb-account-storage","title":"Method 2: DinoDB Account Storage","text":"<p>Add accounts directly in DinoDB (stored securely in Keychain): 1. Launch DinoDB 2. Click \"Add Account\" 3. Enter your AWS credentials 4. Click \"Save\"</p>"},{"location":"getting-started/installation/#verification","title":"Verification","text":"<p>After installation:</p> <ol> <li>Launch DinoDB</li> <li>You should see either:</li> <li>Your AWS profiles (if using credentials file)</li> <li>Welcome screen to add accounts</li> <li>Double-click an account to connect</li> <li>Verify you can see your DynamoDB tables</li> </ol>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#app-cant-be-opened-error","title":"\"App can't be opened\" Error","text":"<ul> <li>Check that you have macOS 14.0 or later</li> <li>Try the security override steps above</li> </ul>"},{"location":"getting-started/installation/#no-tables-showing","title":"No Tables Showing","text":"<ul> <li>Verify AWS credentials have correct permissions</li> <li>Check that you're in the correct AWS region</li> <li>Ensure tables exist in your AWS account</li> </ul>"},{"location":"getting-started/installation/#connection-issues","title":"Connection Issues","text":"<ul> <li>Verify internet connectivity</li> <li>Check AWS service status</li> <li>Confirm credentials are not expired</li> </ul>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Once installed, continue to the Quick Start Guide to begin using DinoDB.</p>"},{"location":"getting-started/overview/","title":"Overview","text":"<p>DinoDB is a native macOS application designed to make working with AWS DynamoDB tables intuitive and efficient. Whether you're a developer, DevOps engineer, or data analyst, DinoDB provides the tools you need to manage your DynamoDB infrastructure.</p>"},{"location":"getting-started/overview/#why-dinodb","title":"Why DinoDB?","text":""},{"location":"getting-started/overview/#native-macos-experience","title":"Native macOS Experience","text":"<p>Built specifically for macOS using SwiftUI, DinoDB feels at home on your Mac with: - Native look and feel following macOS Human Interface Guidelines - System integration with Keychain for secure credential storage - Responsive design that adapts to your workspace</p>"},{"location":"getting-started/overview/#enterprise-ready-security","title":"Enterprise-Ready Security","text":"<ul> <li>Secure credential storage in macOS Keychain</li> <li>Support for AWS credentials file integration</li> <li>No credentials ever logged or stored in plain text</li> <li>Multiple account management with visual distinction</li> </ul>"},{"location":"getting-started/overview/#real-time-monitoring","title":"Real-Time Monitoring","text":"<ul> <li>CloudWatch integration for performance metrics</li> <li>Interactive charts with multiple time ranges</li> <li>Configurable metric alerts with system notifications</li> <li>Trend analysis and capacity monitoring</li> </ul>"},{"location":"getting-started/overview/#developer-friendly","title":"Developer-Friendly","text":"<ul> <li>Comprehensive debug logging system</li> <li>JSON syntax highlighting</li> <li>Query builder with visual interface</li> <li>Multiple view modes (Table and JSON)</li> </ul>"},{"location":"getting-started/overview/#architecture","title":"Architecture","text":"<p>DinoDB is built using modern Swift technologies:</p> <ul> <li>SwiftUI: Declarative UI framework for native macOS interface</li> <li>SwiftData: Model persistence and account management</li> <li>AWS SDK for Swift: Official AWS integration</li> <li>Charts Framework: Native metric visualization</li> <li>Keychain Services: Secure credential storage</li> </ul>"},{"location":"getting-started/overview/#target-users","title":"Target Users","text":"<ul> <li>Developers: Debug and test DynamoDB applications</li> <li>DevOps Engineers: Monitor table performance and capacity</li> <li>Data Analysts: Query and analyze DynamoDB data</li> <li>System Administrators: Manage multiple AWS accounts and regions</li> </ul>"},{"location":"getting-started/quickstart/","title":"Quick Start","text":"<p>Get up and running with DinoDB in just a few minutes.</p>"},{"location":"getting-started/quickstart/#step-1-add-your-first-aws-account","title":"Step 1: Add Your First AWS Account","text":""},{"location":"getting-started/quickstart/#using-aws-credentials-file","title":"Using AWS Credentials File","text":"<p>If you have <code>~/.aws/credentials</code> configured: 1. Launch DinoDB 2. Your AWS profiles will appear automatically 3. Double-click a profile to connect</p>"},{"location":"getting-started/quickstart/#manual-account-setup","title":"Manual Account Setup","text":"<ol> <li>Click \"Add Account\"</li> <li>Fill in the form:</li> <li>Name: \"My AWS Account\"</li> <li>Access Key ID: Your AWS access key</li> <li>Secret Access Key: Your AWS secret key</li> <li>Region: Your preferred region (e.g., us-east-1)</li> <li>Tags: Optional labels (e.g., \"production\", \"development\")</li> <li>Click \"Save\"</li> </ol>"},{"location":"getting-started/quickstart/#step-2-connect-to-your-account","title":"Step 2: Connect to Your Account","text":"<ol> <li>Double-click your account card</li> <li>Wait for the connection to establish</li> <li>You'll see your DynamoDB tables in the sidebar</li> </ol>"},{"location":"getting-started/quickstart/#step-3-browse-your-tables","title":"Step 3: Browse Your Tables","text":""},{"location":"getting-started/quickstart/#table-list-view","title":"Table List View","text":"<ul> <li>Tables appear in the left sidebar</li> <li>Click any table to view its data</li> <li>Use the search box to filter tables</li> <li>Star tables to mark as favorites</li> </ul>"},{"location":"getting-started/quickstart/#table-data-view","title":"Table Data View","text":"<ul> <li>Table View: Spreadsheet-like interface</li> <li>JSON View: Raw DynamoDB JSON format</li> <li>Pagination: Navigate through large datasets</li> <li>Sorting: Click column headers to sort</li> </ul>"},{"location":"getting-started/quickstart/#step-4-perform-basic-operations","title":"Step 4: Perform Basic Operations","text":""},{"location":"getting-started/quickstart/#view-items","title":"View Items","text":"<ol> <li>Select a table from the sidebar</li> <li>Browse items in the main view</li> <li>Click any item to see details</li> </ol>"},{"location":"getting-started/quickstart/#add-new-item","title":"Add New Item","text":"<ol> <li>Click \"Add Item\" button</li> <li>Use the JSON editor or form fields</li> <li>Click \"Save\" to create the item</li> </ol>"},{"location":"getting-started/quickstart/#edit-existing-item","title":"Edit Existing Item","text":"<ol> <li>Double-click an item in the table</li> <li>Modify values in the detail view</li> <li>Click \"Save Changes\"</li> </ol>"},{"location":"getting-started/quickstart/#delete-item","title":"Delete Item","text":"<ol> <li>Select an item</li> <li>Press Delete key or right-click &gt; Delete</li> <li>Confirm the deletion</li> </ol>"},{"location":"getting-started/quickstart/#step-5-explore-advanced-features","title":"Step 5: Explore Advanced Features","text":""},{"location":"getting-started/quickstart/#query-builder","title":"Query Builder","text":"<ol> <li>Click \"Query\" in the toolbar</li> <li>Select your partition key</li> <li>Add conditions for sort keys</li> <li>Click \"Run Query\"</li> </ol>"},{"location":"getting-started/quickstart/#monitoring-dashboard","title":"Monitoring Dashboard","text":"<ol> <li>Select a table</li> <li>Click the \"Metrics\" tab</li> <li>View real-time CloudWatch metrics</li> <li>Set up alerts for important thresholds</li> </ol>"},{"location":"getting-started/quickstart/#settings-preferences","title":"Settings &amp; Preferences","text":"<ol> <li>Click the gear icon in the toolbar</li> <li>Customize:</li> <li>Theme (Light/Dark/System)</li> <li>Default page sizes</li> <li>Auto-refresh intervals</li> <li>Keyboard shortcuts</li> </ol>"},{"location":"getting-started/quickstart/#common-tasks","title":"Common Tasks","text":""},{"location":"getting-started/quickstart/#switching-between-accounts","title":"Switching Between Accounts","text":"<ul> <li>Click different account cards to switch contexts</li> <li>Each account maintains its own connection state</li> <li>Visual indicators show active connections</li> </ul>"},{"location":"getting-started/quickstart/#managing-multiple-regions","title":"Managing Multiple Regions","text":"<ul> <li>Add separate accounts for different regions</li> <li>Or edit account settings to change regions</li> <li>Tables will refresh automatically</li> </ul>"},{"location":"getting-started/quickstart/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li>\u2318N: Add new item</li> <li>\u2318R: Refresh tables</li> <li>\u2318F: Focus search</li> <li>Delete: Delete selected item</li> <li>\u2318,: Open settings</li> </ul>"},{"location":"getting-started/quickstart/#tips-for-success","title":"Tips for Success","text":"<p>Performance</p> <ul> <li>Use pagination for large tables</li> <li>Set appropriate page sizes in settings</li> <li>Use queries instead of scans when possible</li> </ul> <p>Security</p> <ul> <li>Never share AWS credentials</li> <li>Use IAM roles with minimal required permissions</li> <li>Regularly rotate access keys</li> </ul> <p>Monitoring</p> <ul> <li>Set up CloudWatch alerts for important metrics</li> <li>Monitor capacity utilization regularly</li> <li>Watch for throttling events</li> </ul>"},{"location":"getting-started/quickstart/#next-steps","title":"Next Steps","text":"<p>Now that you're familiar with the basics:</p> <ul> <li>Read the User Guide for detailed features</li> <li>Learn about Account Management</li> <li>Explore Advanced Querying</li> <li>Set up Monitoring &amp; Alerts</li> </ul>"},{"location":"user-guide/account-management/","title":"Account Management","text":"<p>Comprehensive guide to managing AWS accounts in DinoDB.</p>"},{"location":"user-guide/account-management/#overview","title":"Overview","text":"<p>DinoDB supports two types of account storage: - AWS Profiles: Read from <code>~/.aws/credentials</code> (read-only) - Stored Accounts: Saved in DinoDB with Keychain security</p>"},{"location":"user-guide/account-management/#aws-credentials-file-integration","title":"AWS Credentials File Integration","text":""},{"location":"user-guide/account-management/#automatic-discovery","title":"Automatic Discovery","text":"<p>DinoDB automatically discovers accounts from your AWS credentials file at <code>~/.aws/credentials</code>.</p>"},{"location":"user-guide/account-management/#visual-distinction","title":"Visual Distinction","text":"<ul> <li>AWS profiles show a document icon</li> <li>Cannot be edited or deleted from DinoDB</li> <li>Automatically reload when credentials file changes</li> </ul>"},{"location":"user-guide/account-management/#supported-format","title":"Supported Format","text":"<pre><code>[default]\naws_access_key_id = YOUR_ACCESS_KEY\naws_secret_access_key = YOUR_SECRET_KEY\nregion = us-east-1\n\n[production]\naws_access_key_id = PROD_ACCESS_KEY\naws_secret_access_key = PROD_SECRET_KEY\nregion = us-west-2\n</code></pre>"},{"location":"user-guide/account-management/#adding-accounts","title":"Adding Accounts","text":""},{"location":"user-guide/account-management/#manual-account-creation","title":"Manual Account Creation","text":"<ol> <li>Click \"Add Account\" button</li> <li>Complete the form:</li> <li>Name: Descriptive account name</li> <li>Access Key ID: AWS access key</li> <li>Secret Access Key: AWS secret key  </li> <li>Region: Default AWS region</li> <li>Description: Optional account description</li> <li>Tags: Categorization labels</li> <li>Click \"Save\"</li> </ol>"},{"location":"user-guide/account-management/#security-features","title":"Security Features","text":"<ul> <li>Credentials stored in macOS Keychain</li> <li>Never logged or stored in plain text</li> <li>Secure access with app-specific permissions</li> </ul>"},{"location":"user-guide/account-management/#managing-accounts","title":"Managing Accounts","text":""},{"location":"user-guide/account-management/#account-actions","title":"Account Actions","text":"<ul> <li>Double-click: Connect to account</li> <li>Right-click: Context menu with actions</li> <li>Edit: Modify account details (stored accounts only)</li> <li>Delete: Remove account (stored accounts only)</li> </ul>"},{"location":"user-guide/account-management/#connection-status","title":"Connection Status","text":"<ul> <li>Connected: Blue outline border</li> <li>Disconnected: Gray border</li> <li>Error: Red border with error details</li> </ul>"},{"location":"user-guide/account-management/#bulk-operations","title":"Bulk Operations","text":"<ul> <li>Reload All: Refresh AWS profiles from file</li> <li>Disconnect All: Close all active connections</li> </ul>"},{"location":"user-guide/account-management/#account-details","title":"Account Details","text":""},{"location":"user-guide/account-management/#metadata-display","title":"Metadata Display","text":"<p>Each account card shows: - Account name and description - AWS region and tags - Connection status - Creation date (for stored accounts) - Profile source (AWS file vs. stored)</p>"},{"location":"user-guide/account-management/#rich-tagging-system","title":"Rich Tagging System","text":"<ul> <li>Color-coded tag backgrounds</li> <li>Filtering by tags</li> <li>Quick identification of account types</li> </ul>"},{"location":"user-guide/account-management/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/account-management/#security","title":"Security","text":"<ul> <li>Use IAM users with minimal required permissions</li> <li>Regularly rotate access keys</li> <li>Never commit credentials to version control</li> <li>Use separate accounts for different environments</li> </ul>"},{"location":"user-guide/account-management/#organization","title":"Organization","text":"<ul> <li>Use descriptive account names</li> <li>Tag accounts by environment (prod, dev, staging)</li> <li>Group related accounts together</li> <li>Include region information in names</li> </ul>"},{"location":"user-guide/account-management/#performance","title":"Performance","text":"<ul> <li>Limit concurrent connections</li> <li>Use regional accounts when possible</li> <li>Monitor CloudWatch costs</li> </ul>"},{"location":"user-guide/account-management/#troubleshooting","title":"Troubleshooting","text":""},{"location":"user-guide/account-management/#common-issues","title":"Common Issues","text":"<ul> <li>No tables showing: Check IAM permissions</li> <li>Connection timeout: Verify network and credentials</li> <li>Profile not appearing: Check credentials file format</li> </ul>"},{"location":"user-guide/account-management/#debug-information","title":"Debug Information","text":"<p>Access debug logs for detailed connection information and error diagnosis.</p> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"user-guide/monitoring/","title":"Monitoring &amp; Metrics","text":"<p>Real-time monitoring and alerting system integrated with AWS CloudWatch.</p>"},{"location":"user-guide/monitoring/#cloudwatch-integration","title":"CloudWatch Integration","text":""},{"location":"user-guide/monitoring/#metrics-dashboard","title":"Metrics Dashboard","text":"<ul> <li>Real-time performance metrics</li> <li>Interactive charts using native SwiftUI Charts</li> <li>Multiple time ranges (1h, 6h, 24h, 7d)</li> <li>Automatic refresh every 60 seconds</li> </ul>"},{"location":"user-guide/monitoring/#supported-metrics","title":"Supported Metrics","text":"<ul> <li>Capacity Metrics: Read/Write capacity utilization</li> <li>Performance Metrics: Latency, throttling events</li> <li>Error Metrics: User errors, system errors</li> <li>Storage Metrics: Item count, table size</li> </ul>"},{"location":"user-guide/monitoring/#interactive-charts","title":"Interactive Charts","text":""},{"location":"user-guide/monitoring/#chart-types","title":"Chart Types","text":"<ul> <li>Line charts for trend analysis</li> <li>Area charts for cumulative metrics</li> <li>Bar charts for discrete events</li> <li>Combo charts for correlated metrics</li> </ul>"},{"location":"user-guide/monitoring/#chart-features","title":"Chart Features","text":"<ul> <li>Zoom and pan capabilities</li> <li>Data point hover information</li> <li>Export to image formats</li> <li>Time range selection</li> </ul>"},{"location":"user-guide/monitoring/#visual-indicators","title":"Visual Indicators","text":"<ul> <li>Trend arrows with color coding</li> <li>Threshold breach highlights</li> <li>Performance status badges</li> <li>Capacity utilization warnings</li> </ul>"},{"location":"user-guide/monitoring/#metric-alerts","title":"Metric Alerts","text":""},{"location":"user-guide/monitoring/#alert-configuration","title":"Alert Configuration","text":"<ul> <li>Configurable thresholds for all metrics</li> <li>Multiple severity levels (Info, Warning, Critical)</li> <li>Custom alert names and descriptions</li> <li>Flexible time windows</li> </ul>"},{"location":"user-guide/monitoring/#alert-types","title":"Alert Types","text":"<ul> <li>Threshold Alerts: Trigger when metric exceeds limit</li> <li>Trend Alerts: Detect unusual patterns</li> <li>Composite Alerts: Multiple condition combinations</li> <li>Anomaly Detection: Machine learning-based alerts</li> </ul>"},{"location":"user-guide/monitoring/#notification-system","title":"Notification System","text":"<ul> <li>Native macOS notifications</li> <li>Visual alert banners in dashboard</li> <li>Alert history and acknowledgment</li> <li>Escalation procedures</li> </ul>"},{"location":"user-guide/monitoring/#performance-monitoring","title":"Performance Monitoring","text":""},{"location":"user-guide/monitoring/#capacity-tracking","title":"Capacity Tracking","text":"<ul> <li>Read/write capacity utilization</li> <li>Auto-scaling recommendations</li> <li>Cost optimization suggestions</li> <li>Burst capacity monitoring</li> </ul>"},{"location":"user-guide/monitoring/#latency-analysis","title":"Latency Analysis","text":"<ul> <li>Request latency percentiles</li> <li>Regional latency comparison</li> <li>Operation-type breakdown</li> <li>Historical trend analysis</li> </ul>"},{"location":"user-guide/monitoring/#error-monitoring","title":"Error Monitoring","text":"<ul> <li>Error rate tracking</li> <li>Error type categorization</li> <li>Root cause analysis hints</li> <li>Recovery recommendations</li> </ul>"},{"location":"user-guide/monitoring/#alert-management","title":"Alert Management","text":""},{"location":"user-guide/monitoring/#alert-dashboard","title":"Alert Dashboard","text":"<ul> <li>Active alerts overview</li> <li>Alert severity distribution</li> <li>Recent alert history</li> <li>Acknowledgment status</li> </ul>"},{"location":"user-guide/monitoring/#alert-actions","title":"Alert Actions","text":"<ul> <li>Acknowledge alerts</li> <li>Snooze notifications</li> <li>Edit alert thresholds</li> <li>Disable/enable alerts</li> </ul>"},{"location":"user-guide/monitoring/#alert-history","title":"Alert History","text":"<ul> <li>Complete alert timeline</li> <li>Resolution tracking</li> <li>Performance impact correlation</li> <li>Trend analysis</li> </ul>"},{"location":"user-guide/monitoring/#monitoring-best-practices","title":"Monitoring Best Practices","text":""},{"location":"user-guide/monitoring/#threshold-setting","title":"Threshold Setting","text":"<ul> <li>Start with conservative thresholds</li> <li>Adjust based on normal usage patterns</li> <li>Account for traffic spikes</li> <li>Consider business impact</li> </ul>"},{"location":"user-guide/monitoring/#alert-fatigue-prevention","title":"Alert Fatigue Prevention","text":"<ul> <li>Use appropriate severity levels</li> <li>Implement alert suppression</li> <li>Group related alerts</li> <li>Regular threshold review</li> </ul>"},{"location":"user-guide/monitoring/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Monitor capacity trends</li> <li>Identify bottlenecks early</li> <li>Plan for growth</li> <li>Optimize query patterns</li> </ul>"},{"location":"user-guide/monitoring/#custom-dashboards","title":"Custom Dashboards","text":""},{"location":"user-guide/monitoring/#dashboard-creation","title":"Dashboard Creation","text":"<ul> <li>Drag-and-drop metric selection</li> <li>Custom time ranges</li> <li>Layout customization</li> <li>Save and share dashboards</li> </ul>"},{"location":"user-guide/monitoring/#widget-types","title":"Widget Types","text":"<ul> <li>Single metric displays</li> <li>Comparison charts</li> <li>Status indicators</li> <li>Custom calculations</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"user-guide/query-builder/","title":"Query Builder","text":"<p>Visual interface for building complex DynamoDB queries without writing code.</p>"},{"location":"user-guide/query-builder/#overview","title":"Overview","text":"<p>The Query Builder provides an intuitive way to construct DynamoDB queries and scans through a visual interface, making it accessible to users who aren't familiar with DynamoDB's query syntax.</p>"},{"location":"user-guide/query-builder/#query-types","title":"Query Types","text":""},{"location":"user-guide/query-builder/#partition-key-queries","title":"Partition Key Queries","text":"<ul> <li>Simple equality matching</li> <li>Required for all queries</li> <li>Efficient data retrieval</li> <li>Index-aware suggestions</li> </ul>"},{"location":"user-guide/query-builder/#sort-key-queries","title":"Sort Key Queries","text":"<ul> <li>Range operations (&gt;, &lt;, &gt;=, &lt;=, between)</li> <li>Equality matching</li> <li>String prefix matching (begins_with)</li> <li>Combined with partition key queries</li> </ul>"},{"location":"user-guide/query-builder/#scan-operations","title":"Scan Operations","text":"<ul> <li>Full table scans with filtering</li> <li>Parallel scan configuration</li> <li>Cost and performance warnings</li> <li>Progress tracking</li> </ul>"},{"location":"user-guide/query-builder/#filter-expressions","title":"Filter Expressions","text":""},{"location":"user-guide/query-builder/#attribute-conditions","title":"Attribute Conditions","text":"<ul> <li>Equality and inequality operators</li> <li>String operations (contains, begins_with)</li> <li>Numeric range queries</li> <li>Boolean and null checks</li> </ul>"},{"location":"user-guide/query-builder/#logical-operators","title":"Logical Operators","text":"<ul> <li>AND/OR combinations</li> <li>Complex nested conditions</li> <li>Parentheses grouping</li> <li>Condition precedence</li> </ul>"},{"location":"user-guide/query-builder/#function-support","title":"Function Support","text":"<ul> <li>size() for collection attributes</li> <li>attribute_exists() and attribute_not_exists()</li> <li>attribute_type() for type checking</li> <li>Custom function builder</li> </ul>"},{"location":"user-guide/query-builder/#visual-interface","title":"Visual Interface","text":""},{"location":"user-guide/query-builder/#drag-and-drop-builder","title":"Drag-and-Drop Builder","text":"<ul> <li>Visual condition blocks</li> <li>Connecting operators</li> <li>Real-time syntax validation</li> <li>Preview of generated expressions</li> </ul>"},{"location":"user-guide/query-builder/#attribute-explorer","title":"Attribute Explorer","text":"<ul> <li>Schema-aware attribute suggestions</li> <li>Type information display</li> <li>Example values</li> <li>Index utilization hints</li> </ul>"},{"location":"user-guide/query-builder/#query-preview","title":"Query Preview","text":"<ul> <li>Generated DynamoDB expression</li> <li>Estimated cost and performance</li> <li>Result count predictions</li> <li>Execution plan visualization</li> </ul>"},{"location":"user-guide/query-builder/#index-selection","title":"Index Selection","text":""},{"location":"user-guide/query-builder/#automatic-index-detection","title":"Automatic Index Detection","text":"<ul> <li>Global Secondary Index (GSI) suggestions</li> <li>Local Secondary Index (LSI) options</li> <li>Cost comparison between indexes</li> <li>Performance impact analysis</li> </ul>"},{"location":"user-guide/query-builder/#manual-index-override","title":"Manual Index Override","text":"<ul> <li>Force specific index usage</li> <li>Compare execution across indexes</li> <li>Index-specific limitations</li> <li>Capacity consumption estimates</li> </ul>"},{"location":"user-guide/query-builder/#advanced-features","title":"Advanced Features","text":""},{"location":"user-guide/query-builder/#projection-expressions","title":"Projection Expressions","text":"<ul> <li>Select specific attributes</li> <li>Reduce data transfer costs</li> <li>Nested attribute selection</li> <li>Expression validation</li> </ul>"},{"location":"user-guide/query-builder/#pagination-control","title":"Pagination Control","text":"<ul> <li>Custom page sizes</li> <li>Bookmark-based pagination</li> <li>Parallel processing options</li> <li>Memory usage optimization</li> </ul>"},{"location":"user-guide/query-builder/#query-optimization","title":"Query Optimization","text":"<ul> <li>Automatic query plan suggestions</li> <li>Cost optimization recommendations</li> <li>Performance bottleneck identification</li> <li>Alternative query strategies</li> </ul>"},{"location":"user-guide/query-builder/#saved-queries","title":"Saved Queries","text":""},{"location":"user-guide/query-builder/#query-templates","title":"Query Templates","text":"<ul> <li>Save frequently used queries</li> <li>Parameterized query templates</li> <li>Team sharing capabilities</li> <li>Version control for queries</li> </ul>"},{"location":"user-guide/query-builder/#query-history","title":"Query History","text":"<ul> <li>Recently executed queries</li> <li>Performance metrics tracking</li> <li>Result caching</li> <li>Quick re-execution</li> </ul>"},{"location":"user-guide/query-builder/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/query-builder/#performance-guidelines","title":"Performance Guidelines","text":"<ul> <li>Prefer queries over scans</li> <li>Use appropriate indexes</li> <li>Limit result set sizes</li> <li>Monitor capacity consumption</li> </ul>"},{"location":"user-guide/query-builder/#cost-optimization","title":"Cost Optimization","text":"<ul> <li>Projection expressions for large items</li> <li>Efficient filter conditions</li> <li>Batch operations when possible</li> <li>Read capacity planning</li> </ul>"},{"location":"user-guide/query-builder/#security-considerations","title":"Security Considerations","text":"<ul> <li>Attribute-level access control</li> <li>Query logging and auditing</li> <li>Sensitive data handling</li> <li>Rate limiting compliance</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"},{"location":"user-guide/table-operations/","title":"Table Operations","text":"<p>Complete guide to working with DynamoDB tables in DinoDB.</p>"},{"location":"user-guide/table-operations/#table-list-views","title":"Table List Views","text":""},{"location":"user-guide/table-operations/#sidebar-mode","title":"Sidebar Mode","text":"<ul> <li>Condensed table list in left sidebar</li> <li>Quick table switching</li> <li>Search and filter capabilities</li> <li>Favorites system</li> </ul>"},{"location":"user-guide/table-operations/#full-table-view","title":"Full Table View","text":"<ul> <li>Expanded table list with details</li> <li>Table metadata preview</li> <li>Bulk operations support</li> </ul>"},{"location":"user-guide/table-operations/#viewing-table-data","title":"Viewing Table Data","text":""},{"location":"user-guide/table-operations/#display-modes","title":"Display Modes","text":""},{"location":"user-guide/table-operations/#table-view","title":"Table View","text":"<ul> <li>Spreadsheet-like interface</li> <li>Sortable columns</li> <li>Inline editing capabilities</li> <li>Row selection and bulk operations</li> </ul>"},{"location":"user-guide/table-operations/#json-view","title":"JSON View","text":"<ul> <li>Raw DynamoDB JSON format</li> <li>Syntax highlighting</li> <li>Copy/paste functionality</li> <li>Schema validation</li> </ul>"},{"location":"user-guide/table-operations/#pagination-controls","title":"Pagination Controls","text":"<ul> <li>Configurable page sizes (10, 25, 50, 100, 250)</li> <li>Forward/backward navigation</li> <li>Jump to specific pages</li> <li>Total item count display</li> </ul>"},{"location":"user-guide/table-operations/#crud-operations","title":"CRUD Operations","text":""},{"location":"user-guide/table-operations/#creating-items","title":"Creating Items","text":"<ol> <li>Click \"Add Item\" button</li> <li>Choose input method:</li> <li>Form builder with field validation</li> <li>Direct JSON editor</li> <li>Set attribute types and values</li> <li>Validate and save</li> </ol>"},{"location":"user-guide/table-operations/#reading-items","title":"Reading Items","text":"<ul> <li>Browse with pagination</li> <li>Search and filter capabilities</li> <li>Export to various formats</li> <li>Item detail views with full attribute display</li> </ul>"},{"location":"user-guide/table-operations/#updating-items","title":"Updating Items","text":"<ol> <li>Double-click item to open detail view</li> <li>Edit attributes in-place</li> <li>Validate changes</li> <li>Save with confirmation</li> </ol>"},{"location":"user-guide/table-operations/#deleting-items","title":"Deleting Items","text":"<ul> <li>Single item deletion</li> <li>Bulk delete operations</li> <li>Confirmation dialogs</li> <li>Undo capabilities (where supported)</li> </ul>"},{"location":"user-guide/table-operations/#query-operations","title":"Query Operations","text":""},{"location":"user-guide/table-operations/#simple-queries","title":"Simple Queries","text":"<ul> <li>Partition key filtering</li> <li>Sort key range queries</li> <li>Attribute-based filtering</li> <li>Index utilization</li> </ul>"},{"location":"user-guide/table-operations/#advanced-queries","title":"Advanced Queries","text":"<ul> <li>Complex filter expressions</li> <li>Projection expressions</li> <li>Conditional operations</li> <li>Cross-table queries</li> </ul>"},{"location":"user-guide/table-operations/#table-management","title":"Table Management","text":""},{"location":"user-guide/table-operations/#table-information","title":"Table Information","text":"<ul> <li>Schema details and key structure</li> <li>Capacity and billing information</li> <li>Index configuration</li> <li>Stream settings</li> </ul>"},{"location":"user-guide/table-operations/#table-creation","title":"Table Creation","text":"<ul> <li>Guided table creation wizard</li> <li>Schema design assistance</li> <li>Capacity planning tools</li> <li>Best practice recommendations</li> </ul>"},{"location":"user-guide/table-operations/#table-modification","title":"Table Modification","text":"<ul> <li>Index management</li> <li>Capacity adjustments</li> <li>Stream configuration</li> <li>Tag management</li> </ul>"},{"location":"user-guide/table-operations/#performance-features","title":"Performance Features","text":""},{"location":"user-guide/table-operations/#optimization-tools","title":"Optimization Tools","text":"<ul> <li>Query performance analysis</li> <li>Scan vs. query recommendations</li> <li>Index usage optimization</li> <li>Cost estimation</li> </ul>"},{"location":"user-guide/table-operations/#monitoring-integration","title":"Monitoring Integration","text":"<ul> <li>Real-time performance metrics</li> <li>Capacity utilization tracking</li> <li>Error rate monitoring</li> <li>Latency analysis</li> </ul>"},{"location":"user-guide/table-operations/#data-exportimport","title":"Data Export/Import","text":""},{"location":"user-guide/table-operations/#export-formats","title":"Export Formats","text":"<ul> <li>JSON</li> <li>CSV</li> <li>DynamoDB JSON format</li> <li>Custom templates</li> </ul>"},{"location":"user-guide/table-operations/#import-capabilities","title":"Import Capabilities","text":"<ul> <li>Bulk data import</li> <li>Schema validation</li> <li>Error handling and reporting</li> <li>Progress tracking</li> </ul> <p>This is a stub - full documentation will be generated from project source</p>"}]}